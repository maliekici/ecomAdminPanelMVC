@model ecomAdminPanel.Models.Entity.Products1
@{
    ViewBag.Title = "UpdateInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Product UpDATE Page</h2>

<div class="container">
    @using (Html.BeginForm("Update", "Products", FormMethod.Post))
    {
        @Html.HiddenFor(x => x.ID)
        <div class="form-group">
            @Html.LabelFor(x => x.Categories.Category)
            @Html.DropDownListFor(x => x.CategoryID, Model.CategoryList, "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.CategoryID, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Brands.Brand)
            @Html.DropDownListFor(x => x.BrandID, Model.BrandList, "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.BrandID, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.ProductName)
            @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.ProductName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BarcodeNo)
            @Html.TextBoxFor(x => x.BarcodeNo, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.BarcodeNo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.PurchasePrice)
            @Html.TextBoxFor(x => x.PurchasePrice, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.PurchasePrice, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.SalePrice)
            @Html.TextBoxFor(x => x.SalePrice, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.SalePrice, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Amount)
            @Html.TextBoxFor(x => x.Amount, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Amount, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Units.Unit)
            @Html.DropDownListFor(x => x.UnitID, Model.UnitList, "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.UnitID, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.KDV)
            @Html.TextBoxFor(x => x.KDV, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.KDV, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Date)
            @Html.TextBoxFor(x => x.Date, new { @class = "form-control", type = "date", @Value=Model.Date.ToString("yyyy-MM-dd") })
            @Html.ValidationMessageFor(x => x.Date, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Explanation)
            @Html.TextAreaFor(x => x.Explanation, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Explanation, "", new { @class = "text-danger" })
        </div>
        <div>
            <button class="btn btn-primary">Update Product</button>
        </div>
    }
</div>
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#CategoryID").change(function () {
                var ID = $("#CategoryID").val();
                var brandList = $("#BrandID");
                brandList.empty();
                $.ajax({
                    url: '/Products/GetBrand',
                    type: 'POST',
                    dataType: 'json',
                    data: { 'id2': ID },
                    success: function (data) {
                        $.each(data, function (index, option) {
                            brandList.append('<option value=' + option.Value + '>' + option.Text + '</option>')
                        });
                    }

                });
            });

        });
    </script>
}
<script src="~/Scripts2/ondalik.js"></script>
